
name: Win64

on: [push]

jobs:
  ###################################
  #                                 #
  # FULL BUILDS                     #
  #                                 #
  ###################################
  windows-full-build:
    runs-on: windows-2022

    defaults:
      run:
        shell: msys2 {0}

    steps:

    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup environment
      uses: ilammy/msvc-dev-cmd@v1

    - name: Install Visual C++ Redistributable 2022
      run: |
        $vc_redist_url_2022 = "https://aka.ms/vs/17/release/vc_redist.x64.exe"
        Invoke-WebRequest -Uri $vc_redist_url_2022 -OutFile vc_redist_2022.x64.exe
        Start-Process vc_redist_2022.x64.exe -ArgumentList "/install", "/quiet", "/norestart" -Wait
      shell: powershell
      
    # Install Vulkan SDK
    - name: Install Vulkan SDK
      shell: pwsh # Use PowerShell for better Windows scripting
      run: |
        # Download Vulkan SDK installer
        Invoke-WebRequest -Uri "https://sdk.lunarg.com/sdk/download/latest/windows/vulkan-sdk.exe" -OutFile "vulkan-sdk.exe"
          
        # Install silently to C:\VulkanSDK
        Start-Process -FilePath ".\vulkan-sdk.exe" -ArgumentList "/S", "/D=C:\VulkanSDK" -Wait -NoNewWindow
          
        # Set environment variables
        $env:VULKAN_SDK = "C:\VulkanSDK"
        $env:PATH = "$env:VULKAN_SDK\Bin;" + $env:PATH
        $env:VK_LAYER_PATH = "$env:VULKAN_SDK\Bin"
          
        # Persist environment variables for subsequent steps
        echo "VULKAN_SDK=$env:VULKAN_SDK" >> $env:GITHUB_ENV
        echo "PATH=$env:VULKAN_SDK\Bin;$env:PATH" >> $env:GITHUB_ENV
        echo "VK_LAYER_PATH=$env:VK_LAYER_PATH" >> $env:GITHUB_ENV

    # Verify Vulkan installation
    - name: Verify Vulkan
      run: |
        vulkaninfo --summary
          
    - name: Setup MSYS
      uses: msys2/setup-msys2@v2
      with:
        update: true
        path-type: inherit
        
    - name: Get machine name
      run: |
        echo "Machine name: $RUNNER_NAME"

    - name: Setup environment
      run: mkdir -p ssh
      
    - name: Decode SSH key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ssh/id_rsa
      shell: bash

    - name: Synchronize clock
      shell: cmd
      run: |
        w32tm /config /manualpeerlist:time.windows.com /syncfromflags:manual /reliable:YES /update
        net stop w32time
        net start w32time
        w32tm /resync /rediscover

    - name: Set permissions on SSH key
      shell: cmd
      run: |
        icacls "ssh\id_rsa" /inheritance:r /grant:r "%USERNAME%:R"
        
    - name: Set executable permissions
      run: |
        chmod +x ./*.sh ./bin/*.sh ./etc/*.sh ./bin/release/*.sh
        
    # - name: Install cmake
    #   run: |
    #     ./etc/install_cmake.sh
    - name: Install MSYS2 Dependencies
      run: |
        pacman -S --noconfirm nasm
      
    - name: Build mrv2
      run: |
        ./etc/runme_nolog.sh -v -t package -D TLRENDER_USD=OFF
        
    - name: Upload binaries  # Conditional step (beta branch only)
      run: |
        ./bin/release/upload_sourceforge.sh
