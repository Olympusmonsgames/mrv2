name: GPL Builds

on: [push]

jobs:
  ###################################
  #                                 #
  # GPL  BUILDS                     #
  #                                 #
  ###################################
  linux-gpl-build:
    runs-on: ubuntu-20.04

    steps:
    
    - uses: actions/checkout@v4
      with:
        submodules: recursive
        
    - name: Update
      run: sudo apt-get update

    - name: Install essential build tools
      run: sudo apt-get install -y autoconf automake yasm
      
    - name: Install OpenGL dev
      run: sudo apt-get install -y xorg-dev libglu1-mesa-dev mesa-common-dev

    - name: Install X11 dev
      run: sudo apt-get install -y libx11-dev libxcursor-dev libxinerama-dev

    - name: Install ALSA dev
      run: sudo apt-get install -y libasound2-dev

    - name: Install PulseAudio dev
      run: sudo apt-get install -y libpulse-dev

    - name: Install Pango dev
      run: sudo apt-get install -y libpango1.0-dev

    - name: Install Wayland
      run: sudo apt-get install -y libwayland-dev wayland-protocols libdbus-1-dev libxkbcommon-dev libegl-dev libgtk-3-dev

    - name: Install openssl
      run: sudo apt-get install -y openssl
      
    - name: Install ninja-build
      run: sudo apt-get install -y ninja-build
      
    - name: Install gettext
      run: sudo apt-get install -y gettext
      
    - name: Install python dependencies
      run: sudo apt-get install -y libssl-dev libffi-dev
      
    - name: Setup environment
      run: mkdir -p ssh

    - name: Decode SSH key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ssh/id_rsa
      shell: bash
  
    - name: Set permissions on SSH key
      run: chmod 600 ssh/id_rsa
  
    - name: Set executable permissions
      run: |
        chmod +x ./*.sh ./bin/*.sh ./etc/*.sh
        
    - name: Build mrv2
      run: |
        ./etc/runme_nolog.sh -gpl -t package

    # - name: Release/Upload binaries
    #   run: |
    #     ./bin/release/upload_sourceforge.sh

  windows-gpl-build:
    runs-on: windows-2019

    defaults:
      run:
        shell: msys2 {0}

    steps:

    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Setup environment
      uses: ilammy/msvc-dev-cmd@v1

    - name: Setup MSYS
      uses: msys2/setup-msys2@v2
      with:
        update: true
        path-type: inherit

    - name: Setup environment
      run: mkdir -p ssh

    - name: Decode SSH key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ssh/id_rsa
      shell: bash

    - name: Set permissions on SSH key
      shell: cmd
      run: |
        icacls "ssh\id_rsa" /inheritance:r /grant:r "%USERNAME%:R"
      
    - name: Set executable permissions
      run: |
        chmod +x ./*.sh ./bin/*.sh ./etc/*.sh
        
    - name: Build mrv2
      run: |
        ./etc/runme_nolog.sh -gpl -t package -D TLRENDER_USD=OFF
      
    # - name: Release/Upload binaries
    #   run: |
    #     ./bin/release/upload_sourceforge.sh


  macos-gpl-build:
    runs-on: macos-11

    steps:
    
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install ninja-build
      run: brew install ninja
      
    - name: Install automake
      run: brew install automake

    - name: Install GNU sed
      run: brew install gnu-sed
      
    - name: Install Python dependencies
      run: brew install libffi openssl readline sqlite3 xz zlib

    - name: Setup environment
      run: mkdir -p ssh

    - name: Decode SSH key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ssh/id_rsa
      shell: bash
  
    - name: Set permissions on SSH key
      run: chmod 600 ssh/id_rsa
      
    - name: Set executable permissions
      run: |
        chmod +x ./*.sh ./bin/*.sh ./etc/*.sh

    - name: Build mrv2
      run: |
        ./etc/runme_nolog.sh -gpl -t package

    # - name: Release/Upload binaries
    #   run: |
    #     ./bin/release/upload_sourceforge.sh

  macos-14-gpl-build:
    runs-on: macos-14

    env:
      CMAKE_OSX_DEPLOYMENT_TARGET: 14.0
      
    steps:
    
    - uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Install ninja-build
      run: brew install ninja
      
    - name: Install automake
      run: brew install automake
      
    - name: Install GNU sed
      run: brew install gnu-sed
      
    - name: Install Python dependencies
      run: brew install libffi openssl readline sqlite3 xz zlib
        
    - name: Install pyFLTK dependencies
      run: brew install subversion swig
      
    - name: Setup environment
      run: mkdir -p ssh

    - name: Decode SSH key
      run: echo "${{ secrets.SSH_PRIVATE_KEY }}" | base64 -d > ssh/id_rsa
      shell: bash
  
    - name: Set permissions on SSH key
      run: chmod 600 ssh/id_rsa
      
    - name: Set executable permissions
      run: |
        chmod +x ./*.sh ./bin/*.sh ./etc/*.sh

    - name: Build mrv2
      run: |
        ./etc/runme_nolog.sh -gpl -t package

    - name: Release/Upload binaries
      run: |
        ./bin/release/upload_sourceforge.sh

